version: '3.3'

services:
  demo-mysql:
    image: mysql:latest
    container_name: my_mysql
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD:-p4SSW0rd}
      - MYSQL_DATABASE=${DATABASE_NAME:-demo}
      - MYSQL_USER=${DATABASE_USER:-dbuser}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD:-dbp4ss}
    ports:
      - 3306:3306
    volumes:
      - /docker-volumes= /var/lib/mysql
    networks:
      - mynetwork  

  spring-boot-jpa-docker-webapp:
    image: madhukargunda/spring-boot-jpa-docker-webapp
    container_name: web
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
    depends_on:
      - demo-mysql
    ports:
      - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_ACTIVE_PROFILE:-container}
      - DATABASE_HOST=demo-mysql
      - DATABASE_USER=${DATABASE_USER:-dbuser}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-dbp4ss}
      - DATABASE_NAME=${DATABASE_NAME:-demo}
      - DATABASE_PORT=${DATABASE_PORT:-3306}    
    networks:
      - mynetwork


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "7001:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - mynetwork    

networks:
  mynetwork:
    driver: overlay